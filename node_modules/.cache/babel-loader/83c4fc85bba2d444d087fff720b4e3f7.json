{"ast":null,"code":"import _toConsumableArray from \"/Users/ChristinaGerard/Desktop/personal_projects/address_book/app_address_book/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/ChristinaGerard/Desktop/personal_projects/address_book/app_address_book/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ChristinaGerard/Desktop/personal_projects/address_book/app_address_book/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ChristinaGerard/Desktop/personal_projects/address_book/app_address_book/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ChristinaGerard/Desktop/personal_projects/address_book/app_address_book/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ChristinaGerard/Desktop/personal_projects/address_book/app_address_book/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ChristinaGerard/Desktop/personal_projects/address_book/app_address_book/src/components/containers/list_contacts/list_contacts.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Button } from 'react-bootstrap';\nimport { selectContact } from '../../../actions';\nimport './list_contacts.css';\n\nvar ListContacts =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ListContacts, _Component);\n\n  function ListContacts(props) {\n    var _this;\n\n    _classCallCheck(this, ListContacts);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ListContacts).call(this, props));\n    _this.state = {\n      contacts: _this.props.contacts,\n      renderCotacts: _this.props.renderContacts,\n      contactsLength: [] // console.log('CONSTRUCTOR list contacts state: ', this.state.contacts)\n      // if (this.state.contactsLength.length === 2) {\n      //     if (this.state.contactsLength[0] !== this.state.contactsLength[1]) {\n      //         this.render();\n      //     }\n      // }\n      // setInterval(\n      //     () => {\n      //         if (this.state.renderCotacts) {\n      //             this.render();\n      //             console.log(this.state.contacts);\n      //             console.log('Render TRUE: ', this.state.renderCotacts);\n      //             console.log('--------------------------------------------');\n      //         } else {\n      //             console.log(this.state.contacts);\n      //             console.log('Render FALSE: ', this.state.renderCotacts);\n      //             console.log('--------------------------------------------');\n      //         }\n      //     },\n      //     3000\n      // );\n\n    };\n    return _this;\n  }\n\n  _createClass(ListContacts, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      console.log('reciving props: ', props);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.setState({\n        contactsLength: _toConsumableArray(this.state.contactsLength).concat([this.state.contacts.length])\n      }, function () {\n        console.log('length: ', _this2.state.contactsLength);\n      });\n    }\n  }, {\n    key: \"deleteContact\",\n    value: function deleteContact(data, index) {\n      console.log('DELETE BUTTON CLICKED');\n      console.log('data: ', data);\n      console.log('index: ', index);\n      console.log(this.props.contacts);\n      console.log('--------------------------------------------'); // var index = this.props.contacts.indexOf(data.email);\n      // console.log('index of: ', index)\n      // console.log('this.props', this.props.contacts);\n      // const deleteContact = this.props.contacts[index];\n      // console.log('delete: ', deleteContact);\n    } // shouldComponentUpdate(){\n    //     return this.render()\n    // }\n\n  }, {\n    key: \"renderContactList\",\n    value: function renderContactList() {\n      var _this3 = this;\n\n      return this.props.contacts.map(function (element, index) {\n        return React.createElement(\"div\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          className: \"contacts_list\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card-header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, element.firstName, \" \", element.lastName)), React.createElement(\"div\", {\n          className: \"card-body\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"card-text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, \"Number: \", element.number), React.createElement(\"p\", {\n          className: \"card-text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, \"Email: \", element.email), React.createElement(Button, {\n          bsStyle: \"primary\",\n          onClick: function onClick() {\n            _this3.props.selectContact(element);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, \"More Details\"), React.createElement(Button, {\n          onClick: function onClick() {\n            return _this3.deleteContact(element, index);\n          },\n          className: \"ml-1\",\n          bsStyle: \"danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, \"Delete\")))), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }));\n      });\n    }\n  }, {\n    key: \"UNSAFE_componentWillUpdate\",\n    value: function UNSAFE_componentWillUpdate(nextProps, nextState) {} // console.log('Will Update');\n    // console.log('nextProps: ', nextProps);\n    // console.log('nextState: ', nextState);\n    // console.log('--------------------------------------------');\n    // if (nextProps.contacts.length !== nextState.contacts.length) {\n    //     this.render();\n    // }\n    // componentDidUpdate(prevProps, prevState, snapshot) {\n    //     // If we have a snapshot value, we've just added new items.\n    //     // Adjust scroll so these new items don't push the old ones out of view.\n    //     // (snapshot here is the value returned from getSnapshotBeforeUpdate)\n    //     console.log('Component Did Update');\n    //     console.log('listed contacts: ', this.state.contacts);\n    //     console.log('PrevProps: ', prevProps);\n    //     console.log('prevState: ', prevState);\n    //     console.log('snapshot: ', snapshot);\n    //     console.log('--------------------------------------------');\n    //     this.render();\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      // {this.UNSAFE_componentWillUpdate()}\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Contact List\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, this.renderContactList()));\n    }\n  }]);\n\n  return ListContacts;\n}(Component);\n\nfunction mapStateToProps(state) {\n  // console.log(state.renderContacts)\n  return {\n    contacts: state.contacts,\n    renderContacts: state.renderContacts\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    selectContact: selectContact\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListContacts);","map":{"version":3,"sources":["/Users/ChristinaGerard/Desktop/personal_projects/address_book/app_address_book/src/components/containers/list_contacts/list_contacts.js"],"names":["React","Component","connect","bindActionCreators","Button","selectContact","ListContacts","props","state","contacts","renderCotacts","renderContacts","contactsLength","console","log","setState","length","data","index","map","element","firstName","lastName","number","email","deleteContact","nextProps","nextState","renderContactList","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Button } from 'react-bootstrap'\n\nimport { selectContact } from '../../../actions';\nimport './list_contacts.css'\n\n\nclass ListContacts extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contacts: this.props.contacts,\n            renderCotacts: this.props.renderContacts,\n            contactsLength: []\n        }\n\n        // console.log('CONSTRUCTOR list contacts state: ', this.state.contacts)\n\n\n        // if (this.state.contactsLength.length === 2) {\n        //     if (this.state.contactsLength[0] !== this.state.contactsLength[1]) {\n        //         this.render();\n        //     }\n        // }\n\n\n        // setInterval(\n        //     () => {\n        //         if (this.state.renderCotacts) {\n        //             this.render();\n        //             console.log(this.state.contacts);\n        //             console.log('Render TRUE: ', this.state.renderCotacts);\n        //             console.log('--------------------------------------------');\n        //         } else {\n        //             console.log(this.state.contacts);\n        //             console.log('Render FALSE: ', this.state.renderCotacts);\n        //             console.log('--------------------------------------------');\n        //         }\n        //     },\n        //     3000\n        // );\n    }\n\n    componentWillReceiveProps(props) {\n        console.log('reciving props: ',props)\n    }\n\n    componentDidMount() {\n        this.setState({\n            contactsLength: [\n                ...this.state.contactsLength, this.state.contacts.length\n            ]\n        }, () => {\n            console.log('length: ', this.state.contactsLength);\n        });\n    }\n\n\n    deleteContact(data, index) {\n        console.log('DELETE BUTTON CLICKED');\n        console.log('data: ', data);\n        console.log('index: ', index);\n        console.log(this.props.contacts);\n        console.log('--------------------------------------------');\n\n        // var index = this.props.contacts.indexOf(data.email);\n\n        // console.log('index of: ', index)\n        // console.log('this.props', this.props.contacts);\n\n        // const deleteContact = this.props.contacts[index];\n        // console.log('delete: ', deleteContact);\n    }\n\n    // shouldComponentUpdate(){\n    //     return this.render()\n    // }\n\n    renderContactList() {\n        return this.props.contacts.map((element, index) => {\n            return (\n                <div key={index}>\n                    <li className='contacts_list'>\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h4>{element.firstName} {element.lastName}</h4>\n                            </div>\n                            <div className=\"card-body\">\n                                <p className=\"card-text\">Number: {element.number}</p>\n                                <p className=\"card-text\">Email: {element.email}</p>\n                                <Button\n                                    bsStyle=\"primary\"\n                                    onClick={() => {\n                                        this.props.selectContact(element)\n                                    }}\n                                >More Details</Button>\n                                <Button\n                                    onClick={() => this.deleteContact(element, index)}\n                                    className='ml-1'\n                                    bsStyle=\"danger\">Delete</Button>\n                            </div>\n                        </div>\n                    </li>\n                    <br />\n                </div>\n            );\n        });\n    }\n\n    UNSAFE_componentWillUpdate(nextProps, nextState) {\n        // console.log('Will Update');\n        // console.log('nextProps: ', nextProps);\n        // console.log('nextState: ', nextState);\n        // console.log('--------------------------------------------');\n\n        // if (nextProps.contacts.length !== nextState.contacts.length) {\n        //     this.render();\n        // }\n\n    }\n    // componentDidUpdate(prevProps, prevState, snapshot) {\n    //     // If we have a snapshot value, we've just added new items.\n    //     // Adjust scroll so these new items don't push the old ones out of view.\n    //     // (snapshot here is the value returned from getSnapshotBeforeUpdate)\n    //     console.log('Component Did Update');\n    //     console.log('listed contacts: ', this.state.contacts);\n    //     console.log('PrevProps: ', prevProps);\n    //     console.log('prevState: ', prevState);\n    //     console.log('snapshot: ', snapshot);\n    //     console.log('--------------------------------------------');\n    //     this.render();\n    // }\n\n    render() {\n        // {this.UNSAFE_componentWillUpdate()}\n\n\n        return (\n            <div>\n                <h3 className=\"text-center\">Contact List</h3>\n                <ul>\n                    {this.renderContactList()}\n                </ul>\n            </div>\n        )\n    }\n}\n\n\n\nfunction mapStateToProps(state) {\n    // console.log(state.renderContacts)\n    return {\n        contacts: state.contacts,\n        renderContacts: state.renderContacts\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({ selectContact: selectContact }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListContacts);\n\n"]},"metadata":{},"sourceType":"module"}