{"ast":null,"code":"import _classCallCheck from \"/Users/ChristinaGerard/Desktop/personal_projects/AddressBook/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ChristinaGerard/Desktop/personal_projects/AddressBook/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ChristinaGerard/Desktop/personal_projects/AddressBook/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ChristinaGerard/Desktop/personal_projects/AddressBook/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ChristinaGerard/Desktop/personal_projects/AddressBook/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ChristinaGerard/Desktop/personal_projects/AddressBook/src/components/containers/app/App.js\";\nimport React, { Component } from 'react';\nimport { Grid, Col, Row } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { renderingContacts } from '../../../actions';\nimport './App.css';\nimport Header from '../../header/header';\nimport AddContact from '../add_contact/add_contact';\nimport ContactView from '../contact_view/contact_view';\nimport ListContacts from '../list_contacts/list_contacts';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      contacts: [],\n      initialData: 0 // console.log('App.js all contacts: ', this.state.contacts);\n\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log('Component Did Mount');\n      console.log('----------------------------------');\n      this.updateContacts();\n    }\n  }, {\n    key: \"updateContacts\",\n    value: function updateContacts(data) {\n      if (this.state.initialData === 0) {\n        this.setState({\n          contacts: this.state.contacts.concat(this.props.contacts)\n        });\n        this.setState({\n          initialData: this.state.initialData + 1\n        });\n      } else {\n        this.setState({\n          contacts: this.state.contacts.concat(data)\n        });\n      }\n    } // componentWillMount() {\n    //   console.log('Component Will Mount');\n    //   console.log('----------------------------------');\n    // }\n    // componentWillReceiveProps(nextProps) {\n    //   console.log('Component will receive props');\n    //   console.log('nextProps', nextProps);\n    //   console.log('----------------------------------');\n    // }\n    // shouldComponentUpdate(nextProps, nextState) {\n    //   console.log('Should component Update');\n    //   console.log('nextProps: ', nextProps);\n    //   console.log('nextState: ', nextState);\n    //   console.log('----------------------------------');\n    //   return true;\n    // }\n    // componentWillUpdate(nextProps, nextState) {\n    //   console.log('Component Will update');\n    //   console.log('nextProps: ', nextProps);\n    //   console.log('nextState: ', nextState);\n    //   console.log('----------------------------------');\n    // }\n    // componentDidUpdate(prevProps, prevState) {\n    //   console.log('Component Did Update');\n    //   console.log('prevProps: ', prevProps);\n    //   console.log('prevState: ', prevState);\n    //   console.log('----------------------------------');\n    // }\n    // componentWillUnmount() {\n    //   console.log('Component Will Unmount')\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"show-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 6,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(AddContact, {\n        renderParent: this.render,\n        contacts: this.state.contacts,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })), React.createElement(Col, {\n        xs: 6,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(ContactView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      })), React.createElement(Col, {\n        xsHidden: true,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(ListContacts, {\n        renderParent: this.render,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    contacts: state.contacts,\n    renderContacts: state.renderContacts\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    renderingContacts: renderingContacts\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/ChristinaGerard/Desktop/personal_projects/AddressBook/src/components/containers/app/App.js"],"names":["React","Component","Grid","Col","Row","connect","bindActionCreators","renderingContacts","Header","AddContact","ContactView","ListContacts","App","props","state","contacts","initialData","console","log","updateContacts","data","setState","concat","render","mapStateToProps","renderContacts","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Grid, Col, Row } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { renderingContacts } from '../../../actions';\n\nimport './App.css';\nimport Header from '../../header/header';\nimport AddContact from '../add_contact/add_contact';\nimport ContactView from '../contact_view/contact_view';\nimport ListContacts from '../list_contacts/list_contacts';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      contacts: [],\n      initialData: 0\n    }\n    // console.log('App.js all contacts: ', this.state.contacts);\n  }\n\n  componentDidMount() {\n    console.log('Component Did Mount')\n    console.log('----------------------------------');\n    this.updateContacts();\n  }\n\n  updateContacts(data) {\n    if (this.state.initialData === 0) {\n      this.setState({\n        contacts: this.state.contacts.concat(this.props.contacts)\n      });\n      this.setState({\n        initialData: this.state.initialData + 1\n      })\n    }else{\n      this.setState({\n        contacts: this.state.contacts.concat(data)\n      });\n    }\n  }\n\n  // componentWillMount() {\n  //   console.log('Component Will Mount');\n  //   console.log('----------------------------------');\n  // }\n\n  // componentWillReceiveProps(nextProps) {\n  //   console.log('Component will receive props');\n  //   console.log('nextProps', nextProps);\n  //   console.log('----------------------------------');\n  // }\n\n  // shouldComponentUpdate(nextProps, nextState) {\n  //   console.log('Should component Update');\n  //   console.log('nextProps: ', nextProps);\n  //   console.log('nextState: ', nextState);\n  //   console.log('----------------------------------');\n  //   return true;\n  // }\n  // componentWillUpdate(nextProps, nextState) {\n  //   console.log('Component Will update');\n  //   console.log('nextProps: ', nextProps);\n  //   console.log('nextState: ', nextState);\n  //   console.log('----------------------------------');\n  // }\n\n  // componentDidUpdate(prevProps, prevState) {\n  //   console.log('Component Did Update');\n  //   console.log('prevProps: ', prevProps);\n  //   console.log('prevState: ', prevState);\n  //   console.log('----------------------------------');\n  // }\n\n  // componentWillUnmount() {\n  //   console.log('Component Will Unmount')\n  // }\n\n\n  render() {\n    return (\n      <div>\n        <div>\n          <Header />\n        </div>\n\n        <div>\n          <Grid>\n            <Row className=\"show-grid\">\n              <Col xs={6} md={4}>\n                <AddContact renderParent={this.render} contacts={this.state.contacts} />\n              </Col>\n              <Col xs={6} md={4}>\n                <ContactView />\n              </Col>\n              <Col xsHidden md={4}>\n                <ListContacts renderParent={this.render} />\n              </Col>\n            </Row>\n          </Grid>\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    contacts: state.contacts,\n    renderContacts: state.renderContacts\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({ renderingContacts: renderingContacts }, dispatch)\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}