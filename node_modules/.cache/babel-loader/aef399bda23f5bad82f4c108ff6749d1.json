{"ast":null,"code":"import _toConsumableArray from \"/Users/ChristinaGerard/Desktop/personal_projects/AddressBook/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/ChristinaGerard/Desktop/personal_projects/AddressBook/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ChristinaGerard/Desktop/personal_projects/AddressBook/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ChristinaGerard/Desktop/personal_projects/AddressBook/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ChristinaGerard/Desktop/personal_projects/AddressBook/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ChristinaGerard/Desktop/personal_projects/AddressBook/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/ChristinaGerard/Desktop/personal_projects/AddressBook/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/ChristinaGerard/Desktop/personal_projects/AddressBook/src/components/containers/app/App.js\";\nimport React, { Component } from 'react';\nimport { Grid, Col, Row } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { renderingContacts } from '../../../actions';\nimport './App.css';\nimport Header from '../../header/header';\nimport AddContact from '../add_contact/add_contact';\nimport ContactView from '../contact_view/contact_view';\nimport ListContacts from '../list_contacts/list_contacts';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.updateContacts = _this.updateContacts.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.deleteContact = _this.deleteContact.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      contacts: [],\n      initialData: 0\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateContacts();\n    }\n  }, {\n    key: \"deleteContact\",\n    value: function deleteContact(data) {\n      var index = this.state.contacts.indexOf(data);\n      console.log('DELETING...', data);\n      console.log('Index: ', index);\n      delete this.state.contacts[index]; // this.setState({\n      //   // this.state.contacts.splice(index, 1)\n      //   contacts: this.state.contacts.splice(index, 1)\n      // }, () => {\n      //   console.log('Remaining contacts...', this.state.contacts)\n      //   console.log('----------------------------------------');\n      // })\n      // this.state.contacts.filter(element => {\n      //   return element !== empty;\n      // })\n\n      console.log('Remaining contacts...', this.state.contacts);\n      console.log('----------------------------------------');\n    }\n  }, {\n    key: \"updateContacts\",\n    value: function updateContacts(data) {\n      var _this2 = this;\n\n      if (this.state.initialData === 0) {\n        this.setState({\n          contacts: this.state.contacts.concat(this.props.contacts),\n          initialData: this.state.initialData + 1\n        });\n      } else if (this.state.initialData > 0 && data) {\n        console.log('data coming from child...', data);\n        this.setState({\n          // this.state.contacts.concat(data)\n          contacts: [data].concat(_toConsumableArray(this.state.contacts))\n        }, function () {\n          console.log(_this2.state.contacts);\n\n          _this2.render();\n        });\n      }\n    } // shouldComponentUpdate(nextProps, nextState) {\n    //   var msg = 'COMPONENT SHOULD UPDATE';\n    //   console.log(msg);\n    //   return true;\n    // }\n    // componentWillMount() {\n    //   console.log('Component Will Mount');\n    //   console.log('----------------------------------');\n    // }\n    // componentWillReceiveProps(nextProps) {\n    //   console.log('Component will receive props');\n    //   console.log('nextProps', nextProps);\n    //   console.log('----------------------------------');\n    // }\n    // componentWillUpdate(nextProps, nextState) {\n    //   console.log('Component Will update');\n    //   console.log('nextProps: ', nextProps);\n    //   console.log('nextState: ', nextState);\n    //   console.log('----------------------------------');\n    // }\n    // componentDidUpdate(prevProps, prevState) {\n    //   console.log('Component Did Update');\n    //   console.log('prevProps: ', prevProps);\n    //   console.log('prevState: ', prevState);\n    //   console.log('----------------------------------');\n    // }\n    // componentWillUnmount() {\n    //   console.log('Component Will Unmount')\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"show-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 6,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(AddContact, {\n        updateMyContacts: this.updateContacts,\n        contacts: this.state.contacts,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      })), React.createElement(Col, {\n        xs: 6,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(ContactView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      })), React.createElement(Col, {\n        xsHidden: true,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(ListContacts, {\n        deleteContact: this.deleteContact,\n        contacts: this.state.contacts,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    contacts: state.contacts,\n    renderContacts: state.renderContacts\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    renderingContacts: renderingContacts\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/ChristinaGerard/Desktop/personal_projects/AddressBook/src/components/containers/app/App.js"],"names":["React","Component","Grid","Col","Row","connect","bindActionCreators","renderingContacts","Header","AddContact","ContactView","ListContacts","App","props","updateContacts","bind","deleteContact","state","contacts","initialData","data","index","indexOf","console","log","setState","concat","render","mapStateToProps","renderContacts","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Grid, Col, Row } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { renderingContacts } from '../../../actions';\n\nimport './App.css';\nimport Header from '../../header/header';\nimport AddContact from '../add_contact/add_contact';\nimport ContactView from '../contact_view/contact_view';\nimport ListContacts from '../list_contacts/list_contacts';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.updateContacts = this.updateContacts.bind(this);\n    this.deleteContact = this.deleteContact.bind(this);\n\n    this.state = {\n      contacts: [],\n      initialData: 0\n    }\n  }\n\n  componentDidMount() {\n    this.updateContacts();\n  }\n\n  deleteContact(data) {\n    var index = this.state.contacts.indexOf(data);\n    console.log('DELETING...', data);\n    console.log('Index: ', index);\n    delete this.state.contacts[index]\n\n    // this.setState({\n    //   // this.state.contacts.splice(index, 1)\n    //   contacts: this.state.contacts.splice(index, 1)\n    // }, () => {\n    //   console.log('Remaining contacts...', this.state.contacts)\n    //   console.log('----------------------------------------');\n    // })\n\n    // this.state.contacts.filter(element => {\n    //   return element !== empty;\n    // })\n\n    console.log('Remaining contacts...', this.state.contacts)\n    console.log('----------------------------------------');\n\n  }\n\n  updateContacts(data) {\n    if (this.state.initialData === 0) {\n      this.setState({\n        contacts: this.state.contacts.concat(this.props.contacts),\n        initialData: this.state.initialData + 1\n      });\n    } else if (this.state.initialData > 0 && data) {\n      console.log('data coming from child...', data)\n      this.setState({\n        // this.state.contacts.concat(data)\n        contacts: [data, ...this.state.contacts]\n      }, () => {\n        console.log(this.state.contacts);\n        this.render();\n      });\n    }\n  }\n\n\n  // shouldComponentUpdate(nextProps, nextState) {\n  //   var msg = 'COMPONENT SHOULD UPDATE';\n  //   console.log(msg);\n  //   return true;\n  // }\n  // componentWillMount() {\n  //   console.log('Component Will Mount');\n  //   console.log('----------------------------------');\n  // }\n\n  // componentWillReceiveProps(nextProps) {\n  //   console.log('Component will receive props');\n  //   console.log('nextProps', nextProps);\n  //   console.log('----------------------------------');\n  // }\n\n\n  // componentWillUpdate(nextProps, nextState) {\n  //   console.log('Component Will update');\n  //   console.log('nextProps: ', nextProps);\n  //   console.log('nextState: ', nextState);\n  //   console.log('----------------------------------');\n  // }\n\n  // componentDidUpdate(prevProps, prevState) {\n  //   console.log('Component Did Update');\n  //   console.log('prevProps: ', prevProps);\n  //   console.log('prevState: ', prevState);\n  //   console.log('----------------------------------');\n  // }\n\n  // componentWillUnmount() {\n  //   console.log('Component Will Unmount')\n  // }\n\n\n  render() {\n    return (\n      <div>\n        <div>\n          <Header />\n        </div>\n\n        <div>\n          <Grid>\n            <Row className=\"show-grid\">\n              <Col xs={6} md={4}>\n                <AddContact updateMyContacts={this.updateContacts} contacts={this.state.contacts} />\n              </Col>\n              <Col xs={6} md={4}>\n                <ContactView />\n              </Col>\n              <Col xsHidden md={4}>\n                <ListContacts deleteContact={this.deleteContact} contacts={this.state.contacts} />\n              </Col>\n            </Row>\n          </Grid>\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    contacts: state.contacts,\n    renderContacts: state.renderContacts\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({ renderingContacts: renderingContacts }, dispatch)\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}