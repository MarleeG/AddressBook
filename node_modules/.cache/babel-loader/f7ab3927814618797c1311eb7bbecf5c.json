{"ast":null,"code":"import _classCallCheck from \"/Users/ChristinaGerard/Desktop/personal_projects/AddressBook/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ChristinaGerard/Desktop/personal_projects/AddressBook/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ChristinaGerard/Desktop/personal_projects/AddressBook/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ChristinaGerard/Desktop/personal_projects/AddressBook/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ChristinaGerard/Desktop/personal_projects/AddressBook/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ChristinaGerard/Desktop/personal_projects/AddressBook/src/components/containers/list_contacts/list_contacts.js\";\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { Button } from 'react-bootstrap';\nimport { selectContact } from '../../../actions';\nimport './list_contacts.css';\n\nvar ListContacts =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ListContacts, _Component);\n\n  function ListContacts(props) {\n    var _this;\n\n    _classCallCheck(this, ListContacts);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ListContacts).call(this, props));\n    _this.state = {\n      contacts: _this.props.contacts // console.log('Contact list: ', this.state.contacts);\n\n    };\n    return _this;\n  }\n\n  _createClass(ListContacts, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      console.log('receiving props... ', props);\n    }\n  }, {\n    key: \"deleteContact\",\n    value: function deleteContact(data, index) {\n      console.log('DELETE BUTTON CLICKED');\n      console.log('data: ', data);\n      console.log('index: ', index);\n      console.log(this.props.contacts);\n      console.log('--------------------------------------------');\n    } // shouldComponentUpdate() {\n    //     alert('COMPONENT UPDATED');\n    //     console.log('Contact list contacts....', this.state.contacts)\n    //     return true;\n    // }\n\n  }, {\n    key: \"renderContactList\",\n    value: function renderContactList() {\n      var _this2 = this;\n\n      if (this.state.contacts.length > 0) {\n        console.log('COMING FROM STATE');\n        return this.state.contacts.map(function (element, index) {\n          return React.createElement(\"div\", {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44\n            },\n            __self: this\n          }, React.createElement(\"li\", {\n            className: \"contacts_list\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"card\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"card-header\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          }, React.createElement(\"h4\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          }, element.firstName, \" \", element.lastName)), React.createElement(\"div\", {\n            className: \"card-body\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            className: \"card-text\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          }, \"Number: \", element.number), React.createElement(\"p\", {\n            className: \"card-text\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }, \"Email: \", element.email), React.createElement(Button, {\n            bsStyle: \"primary\",\n            onClick: function onClick() {\n              _this2.props.selectContact(element);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }, \"More Details\"), React.createElement(Button, {\n            onClick: function onClick() {\n              return _this2.deleteContact(element, index);\n            },\n            className: \"ml-1\",\n            bsStyle: \"danger\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }, \"Delete\")))), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66\n            },\n            __self: this\n          }));\n        });\n      } else {\n        return this.props.contacts.map(function (element, index) {\n          return React.createElement(\"div\", {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            },\n            __self: this\n          }, React.createElement(\"li\", {\n            className: \"contacts_list\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"card\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"card-header\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, React.createElement(\"h4\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          }, element.firstName, \" \", element.lastName)), React.createElement(\"div\", {\n            className: \"card-body\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            className: \"card-text\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          }, \"Number: \", element.number), React.createElement(\"p\", {\n            className: \"card-text\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81\n            },\n            __self: this\n          }, \"Email: \", element.email), React.createElement(Button, {\n            bsStyle: \"primary\",\n            onClick: function onClick() {\n              _this2.props.selectContact(element);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82\n            },\n            __self: this\n          }, \"More Details\"), React.createElement(Button, {\n            onClick: function onClick() {\n              return _this2.deleteContact(element, index);\n            },\n            className: \"ml-1\",\n            bsStyle: \"danger\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          }, \"Delete\")))), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            },\n            __self: this\n          }));\n        });\n      }\n    } //UNSAFE_componentWillUpdate(nextProps, nextState) {\n    // console.log('Will Update');\n    // console.log('nextProps: ', nextProps);\n    // console.log('nextState: ', nextState);\n    // console.log('--------------------------------------------');\n    // if (nextProps.contacts.length !== nextState.contacts.length) {\n    //     this.render();\n    // }\n    //}\n    // componentDidUpdate(prevProps, prevState, snapshot) {\n    //     // If we have a snapshot value, we've just added new items.\n    //     // Adjust scroll so these new items don't push the old ones out of view.\n    //     // (snapshot here is the value returned from getSnapshotBeforeUpdate)\n    //     console.log('Component Did Update');\n    //     console.log('listed contacts: ', this.state.contacts);\n    //     console.log('PrevProps: ', prevProps);\n    //     console.log('prevState: ', prevState);\n    //     console.log('snapshot: ', snapshot);\n    //     console.log('--------------------------------------------');\n    //     this.render();\n    // }\n    // componentWillReceiveProps(newProps) {\n    //     console.log('newProps: ', newProps);\n    //     // this.setState({name: newProps.name});\n    // }\n    // UNSAFE_componentWillReceiveProps(nextProps) {\n    //     console.log('nextProps: ', nextProps);\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Contact List\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, this.renderContactList()));\n    }\n  }]);\n\n  return ListContacts;\n}(Component); // function mapStateToProps(state) {\n//     // console.log(state.renderContacts)\n//     return {\n//         contacts: state.contacts,\n//         // renderContacts: state.renderContacts\n//     }\n// }\n\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    selectContact: selectContact\n  }, dispatch);\n}\n\nexport default connect(null, mapDispatchToProps)(ListContacts);","map":{"version":3,"sources":["/Users/ChristinaGerard/Desktop/personal_projects/AddressBook/src/components/containers/list_contacts/list_contacts.js"],"names":["React","Component","bindActionCreators","connect","Button","selectContact","ListContacts","props","state","contacts","console","log","data","index","length","map","element","firstName","lastName","number","email","deleteContact","renderContactList","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AAEA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAO,qBAAP;;IAGMC,Y;;;;;AACF,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,sFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,MAAKF,KAAL,CAAWE,QADZ,CAIb;;AAJa,KAAb;AAHe;AAQlB;;;;8CAEyBF,K,EAAO;AAC7BG,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCJ,KAAnC;AACH;;;kCAEaK,I,EAAMC,K,EAAO;AACvBH,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBC,IAAtB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBE,KAAvB;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWE,QAAvB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,8CAAZ;AACH,K,CAED;AACA;AACA;AACA;AACA;;;;wCAEoB;AAAA;;AAChB,UAAG,KAAKH,KAAL,CAAWC,QAAX,CAAoBK,MAApB,GAA6B,CAAhC,EAAkC;AAC9BJ,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,eAAO,KAAKH,KAAL,CAAWC,QAAX,CAAoBM,GAApB,CAAwB,UAACC,OAAD,EAAUH,KAAV,EAAoB;AAC/C,iBACI;AAAK,YAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAI,YAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKG,OAAO,CAACC,SAAb,OAAyBD,OAAO,CAACE,QAAjC,CADJ,CADJ,EAII;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAG,YAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAkCF,OAAO,CAACG,MAA1C,CADJ,EAEI;AAAG,YAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAiCH,OAAO,CAACI,KAAzC,CAFJ,EAGI,oBAAC,MAAD;AACI,YAAA,OAAO,EAAC,SADZ;AAEI,YAAA,OAAO,EAAE,mBAAM;AACX,cAAA,MAAI,CAACb,KAAL,CAAWF,aAAX,CAAyBW,OAAzB;AACH,aAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAHJ,EASI,oBAAC,MAAD;AACI,YAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAACK,aAAL,CAAmBL,OAAnB,EAA4BH,KAA5B,CAAN;AAAA,aADb;AAEI,YAAA,SAAS,EAAC,MAFd;AAGI,YAAA,OAAO,EAAC,QAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBATJ,CAJJ,CADJ,CADJ,EAsBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBJ,CADJ;AA0BH,SA3BM,CAAP;AA4BH,OA9BD,MA8BK;AACF,eAAO,KAAKN,KAAL,CAAWE,QAAX,CAAoBM,GAApB,CAAwB,UAACC,OAAD,EAAUH,KAAV,EAAoB;AAClD,iBACI;AAAK,YAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAI,YAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKG,OAAO,CAACC,SAAb,OAAyBD,OAAO,CAACE,QAAjC,CADJ,CADJ,EAII;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAG,YAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAkCF,OAAO,CAACG,MAA1C,CADJ,EAEI;AAAG,YAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAiCH,OAAO,CAACI,KAAzC,CAFJ,EAGI,oBAAC,MAAD;AACI,YAAA,OAAO,EAAC,SADZ;AAEI,YAAA,OAAO,EAAE,mBAAM;AACX,cAAA,MAAI,CAACb,KAAL,CAAWF,aAAX,CAAyBW,OAAzB;AACH,aAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAHJ,EASI,oBAAC,MAAD;AACI,YAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAACK,aAAL,CAAmBL,OAAnB,EAA4BH,KAA5B,CAAN;AAAA,aADb;AAEI,YAAA,SAAS,EAAC,MAFd;AAGI,YAAA,OAAO,EAAC,QAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBATJ,CAJJ,CADJ,CADJ,EAsBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBJ,CADJ;AA0BH,SA3BS,CAAP;AA4BF;AAEJ,K,CAED;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;6BAES;AAEL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKS,iBAAL,EADL,CAFJ,CADJ;AAQH;;;;EAxIsBrB,S,GA2I3B;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASsB,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAOtB,kBAAkB,CAAC;AAAEG,IAAAA,aAAa,EAAEA;AAAjB,GAAD,EAAmCmB,QAAnC,CAAzB;AACH;;AAED,eAAerB,OAAO,CAAC,IAAD,EAAOoB,kBAAP,CAAP,CAAkCjB,YAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { Button } from 'react-bootstrap'\n\nimport { selectContact } from '../../../actions';\nimport './list_contacts.css';\n\n\nclass ListContacts extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contacts: this.props.contacts,\n        }\n\n        // console.log('Contact list: ', this.state.contacts);\n    }\n\n    componentWillReceiveProps(props) {\n        console.log('receiving props... ', props)\n    }\n\n    deleteContact(data, index) {\n        console.log('DELETE BUTTON CLICKED');\n        console.log('data: ', data);\n        console.log('index: ', index);\n        console.log(this.props.contacts);\n        console.log('--------------------------------------------');\n    }\n\n    // shouldComponentUpdate() {\n    //     alert('COMPONENT UPDATED');\n    //     console.log('Contact list contacts....', this.state.contacts)\n    //     return true;\n    // }\n\n    renderContactList() {\n        if(this.state.contacts.length > 0){\n            console.log('COMING FROM STATE');\n            return this.state.contacts.map((element, index) => {\n                return (\n                    <div key={index}>\n                        <li className='contacts_list'>\n                            <div className=\"card\">\n                                <div className=\"card-header\">\n                                    <h4>{element.firstName} {element.lastName}</h4>\n                                </div>\n                                <div className=\"card-body\">\n                                    <p className=\"card-text\">Number: {element.number}</p>\n                                    <p className=\"card-text\">Email: {element.email}</p>\n                                    <Button\n                                        bsStyle=\"primary\"\n                                        onClick={() => {\n                                            this.props.selectContact(element)\n                                        }}\n                                    >More Details</Button>\n                                    <Button\n                                        onClick={() => this.deleteContact(element, index)}\n                                        className='ml-1'\n                                        bsStyle=\"danger\">Delete</Button>\n                                </div>\n                            </div>\n                        </li>\n                        <br />\n                    </div>\n                );\n            });\n        }else{\n           return this.props.contacts.map((element, index) => {\n            return (\n                <div key={index}>\n                    <li className='contacts_list'>\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h4>{element.firstName} {element.lastName}</h4>\n                            </div>\n                            <div className=\"card-body\">\n                                <p className=\"card-text\">Number: {element.number}</p>\n                                <p className=\"card-text\">Email: {element.email}</p>\n                                <Button\n                                    bsStyle=\"primary\"\n                                    onClick={() => {\n                                        this.props.selectContact(element)\n                                    }}\n                                >More Details</Button>\n                                <Button\n                                    onClick={() => this.deleteContact(element, index)}\n                                    className='ml-1'\n                                    bsStyle=\"danger\">Delete</Button>\n                            </div>\n                        </div>\n                    </li>\n                    <br />\n                </div>\n            );\n        }); \n        }\n        \n    }\n\n    //UNSAFE_componentWillUpdate(nextProps, nextState) {\n    // console.log('Will Update');\n    // console.log('nextProps: ', nextProps);\n    // console.log('nextState: ', nextState);\n    // console.log('--------------------------------------------');\n\n    // if (nextProps.contacts.length !== nextState.contacts.length) {\n    //     this.render();\n    // }\n    //}\n\n    // componentDidUpdate(prevProps, prevState, snapshot) {\n    //     // If we have a snapshot value, we've just added new items.\n    //     // Adjust scroll so these new items don't push the old ones out of view.\n    //     // (snapshot here is the value returned from getSnapshotBeforeUpdate)\n    //     console.log('Component Did Update');\n    //     console.log('listed contacts: ', this.state.contacts);\n    //     console.log('PrevProps: ', prevProps);\n    //     console.log('prevState: ', prevState);\n    //     console.log('snapshot: ', snapshot);\n    //     console.log('--------------------------------------------');\n    //     this.render();\n    // }\n\n    // componentWillReceiveProps(newProps) {\n    //     console.log('newProps: ', newProps);\n    //     // this.setState({name: newProps.name});\n    // }\n\n    // UNSAFE_componentWillReceiveProps(nextProps) {\n    //     console.log('nextProps: ', nextProps);\n    // }\n\n    render() {\n\n        return (\n            <div>\n                <h3 className=\"text-center\">Contact List</h3>\n                <ul>\n                    {this.renderContactList()}\n                </ul>\n            </div>\n        )\n    }\n}\n\n// function mapStateToProps(state) {\n//     // console.log(state.renderContacts)\n//     return {\n//         contacts: state.contacts,\n//         // renderContacts: state.renderContacts\n//     }\n// }\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({ selectContact: selectContact }, dispatch)\n}\n\nexport default connect(null, mapDispatchToProps)(ListContacts);"]},"metadata":{},"sourceType":"module"}